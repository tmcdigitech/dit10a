<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Glossary on TMC - 10 Digital Tech Semester 1</title><link>https://tmcdigitech.github.io/dit10a/glossary/</link><description>Recent content in Glossary on TMC - 10 Digital Tech Semester 1</description><generator>Hugo</generator><language>en-au</language><atom:link href="https://tmcdigitech.github.io/dit10a/glossary/index.xml" rel="self" type="application/rss+xml"/><item><title>bottle.run()</title><link>https://tmcdigitech.github.io/dit10a/glossary/bottleRun/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit10a/glossary/bottleRun/</guid><description>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;50000&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">debug&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can just say &lt;code>run()&lt;/code>, and it will begin using a set of defaults, but we have customised the server slightly. The &lt;code>reloader&lt;/code> flag tells the server to restart every time we change a code file, which saves us from turning it off and on again every time we modify our code. Very handy for development! The &lt;code>debug&lt;/code> flag does a something thing for templates.&lt;/p>
&lt;p>There are a lot of other flags you can use, but two that you might find handy are:&lt;/p></description></item><item><title>URLs</title><link>https://tmcdigitech.github.io/dit10a/glossary/URLs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit10a/glossary/URLs/</guid><description>&lt;link rel="stylesheet" href="https://tmcdigitech.github.io/dit10a/katex-1890dd8a4a.min.css" />
&lt;script defer src="https://tmcdigitech.github.io/dit10a/js/katex-b842636c68.min.js">&lt;/script>
&lt;script defer src="https://tmcdigitech.github.io/dit10a/js/auto-render-e6e57901eb.min.js">&lt;/script>
&lt;script defer src="https://tmcdigitech.github.io/dit10a/js/katex-loader-3cfedeea38.min.js">&lt;/script>



&lt;span class="gdoc-katex katex">
 \[\overbrace{\text{https}}^{\text{scheme}}\text{://}
\overbrace{\text{tmcdigitech.github.io}}^{\text{address}}
\text{:}\overbrace{\text{8080}}^{\text{port}}
\overbrace{\text{/dit10a/glossary/URLs/}}^{\text{path/endpoint}}\]
&lt;/span>

&lt;p>The &lt;strong>scheme&lt;/strong> tells the browser &lt;strong>how&lt;/strong> it will connect to the server. This is typically &lt;strong>https&lt;/strong>, but could also be http, ftp, mailto, or any number of others.&lt;/p>
&lt;p>The &lt;strong>address&lt;/strong> tells the browser &lt;strong>where&lt;/strong> to send the request, i.e. which address. Addresses can be in the form of domain names like &lt;em>google.com&lt;/em>, or IP addresses like &lt;em>192.168.0.1&lt;/em>.&lt;/p>
&lt;ul>
&lt;li>&lt;code>google.com&lt;/code> is like saying &lt;em>Thomas More College&lt;/em>.&lt;/li>
&lt;li>&lt;code>192.168.0.1&lt;/code> is like saying &lt;em>35 Amsterdam Crescent, Salisbury Downs&lt;/em>.&lt;/li>
&lt;li>&lt;code>localhost&lt;/code> is a special value which refers to your own machine. If your server is set to listen to &lt;em>localhost&lt;/em> it won&amp;rsquo;t be visible to any other computer at all, which is very useful for developing and testing code which is incomplete and potentially buggy.&lt;/li>
&lt;/ul>
&lt;p>The &lt;strong>path/endpoint&lt;/strong> tells the browser &lt;strong>what&lt;/strong> to ask the server for, and the server will return the appropriate response based on the path. A path can be as simple as &lt;code>/&lt;/code>, or considerably more complicated.&lt;/p></description></item></channel></rss>